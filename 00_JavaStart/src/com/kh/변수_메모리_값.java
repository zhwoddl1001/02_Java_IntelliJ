package com.kh;

public class 변수_메모리_값 {
    /*
    * 변수 이름 : (개발자)사람들에게 보여주는 이름표
    *           프로그래머가 코드관리를 편하게 할 수 있도록 만들어진 것
    *
    * 메모리 주소 : 컴퓨터가 사용하면 책장 칸 같은 번호
    *             0번 칸, 1번 칸 같은 주소는 컴퓨터가 데이터를 찾을 때 사용하는 것
    *       값   : 메모리 칸에 저장된 실제 데이터
    *            10, "안녕하세요." 와 같은 데이터가 실제로 책장 안에 들어있는 것
    *
    * 메모리 활용 : 책장의 역할
    *           컴퓨터가 데이터를 사용할 때, 메모리가 하는 역할
    *           1.데이터를 저장 : 변수를 만들면 메모리 칸에 변수를 저장
    *           2.데이터를 불러오기 : 변수를 호출하면 메모리에서 데이터를 가져옴
    *           3.데이터를 덮어쓰기 : 변수에 새로운 값을 넣으면 기존 데이터를 덮어 씀
    *
    * 메모리의 한계
    *           메모리도 책장처럼 칸 수(용량)가 정해져 있음
    *           칸이 꽉 차면 더이상 데이터를 저장할 수 없음
    *           -> 프로그램이 너무 많은 메모리를 사용하면 느려지거나 멈출 수 있음
    *               이런 현상을 메모리 부족
    *
    * 책장 : 컴퓨터의 메모리(RAM)데이터를 저장하고 읽는 공간
    * 책   : 책장 칸에 들어있는 데이터
    * 이름표 : 프로그래머가 변수를 붙이는 이름 변수명
    * 칸 번호: 컴퓨터가 데이터를 찾을 때 사용하는 메모리 주소
    *
    *
    *
    * */
}
